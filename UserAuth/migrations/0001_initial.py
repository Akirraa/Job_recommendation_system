# Generated by Django 5.2.1 on 2025-05-20 09:49

import django.contrib.auth.models
import django.core.validators
import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('Jobs', '0001_initial'),
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('email', models.EmailField(max_length=254, unique=True)),
                ('role', models.CharField(choices=[('recruiter', 'recruiter'), ('jobseeker', 'job Seeker')], max_length=10)),
                ('full_name', models.CharField(max_length=100, validators=[django.core.validators.RegexValidator(code='Invalid_name', message='The name must only contain letters and space', regex='^[a-zA-Z ]+$')])),
                ('picture', models.ImageField(blank=True, default='user_pictures/default.png', null=True, upload_to='user_pictures/')),
                ('bio', models.TextField(blank=True, max_length=500, null=True)),
                ('location', models.CharField(blank=True, max_length=255, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'db_table': 'User',
                'ordering': ['full_name', 'role'],
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='RecruiterProfile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('company_name', models.CharField(max_length=255)),
                ('company_website', models.URLField(blank=True, null=True)),
                ('industry', models.CharField(choices=[('tech', 'Technology'), ('finance', 'Finance'), ('healthcare', 'Healthcare'), ('education', 'Education'), ('construction', 'Construction'), ('manufacturing', 'Manufacturing'), ('retail', 'Retail'), ('transport', 'Transportation & Logistics'), ('legal', 'Legal'), ('marketing', 'Marketing & Advertising'), ('consulting', 'Consulting'), ('hospitality', 'Hospitality'), ('real_estate', 'Real Estate'), ('energy', 'Energy & Utilities'), ('government', 'Government'), ('nonprofit', 'Nonprofit'), ('media', 'Media & Entertainment'), ('agriculture', 'Agriculture'), ('telecom', 'Telecommunications'), ('aerospace', 'Aerospace & Defense')], max_length=50)),
                ('position', models.CharField(max_length=100)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='RecruiterUser')),
            ],
            options={
                'db_table': 'RecruiterProfile',
                'ordering': ['industry'],
            },
        ),
        migrations.CreateModel(
            name='JobSeekerProfile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('education', models.CharField(choices=[('HS', 'High School'), ('BA', "Bachelor's Degree"), ('MA', "Master's Degree"), ('PhD', 'PhD')], max_length=3)),
                ('years_of_experience', models.PositiveIntegerField(blank=True, default=0, null=True)),
                ('resume', models.FileField(blank=True, null=True, upload_to='resumes/', validators=[django.core.validators.RegexValidator(code='Bad_resume_Format', message='Upload must be in .doc, .docx or .pdf format', regex='^.+\\.(docx?|pdf)$')])),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('skills', models.ManyToManyField(blank=True, to='Jobs.skill')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='JobSeekerUser')),
            ],
            options={
                'db_table': 'JobSeekerProfile',
            },
        ),
    ]
